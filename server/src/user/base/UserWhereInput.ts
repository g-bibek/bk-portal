/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EventListRelationFilter } from "../../event/base/EventListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { EmpowermentListRelationFilter } from "../../empowerment/base/EmpowermentListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { EmpowermentHistoryListRelationFilter } from "../../empowermentHistory/base/EmpowermentHistoryListRelationFilter";
import { GroupListRelationFilter } from "../../group/base/GroupListRelationFilter";
import { MahakramaHistoryListRelationFilter } from "../../mahakramaHistory/base/MahakramaHistoryListRelationFilter";
@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: () => EventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventListRelationFilter)
  @IsOptional()
  @Field(() => EventListRelationFilter, {
    nullable: true,
  })
  approvedEvents?: EventListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EmpowermentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmpowermentListRelationFilter)
  @IsOptional()
  @Field(() => EmpowermentListRelationFilter, {
    nullable: true,
  })
  authorizedEmpowerments?: EmpowermentListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  Avatar?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventListRelationFilter)
  @IsOptional()
  @Field(() => EventListRelationFilter, {
    nullable: true,
  })
  disapprovedEvents?: EventListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  email?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => EmpowermentHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EmpowermentHistoryListRelationFilter)
  @IsOptional()
  @Field(() => EmpowermentHistoryListRelationFilter, {
    nullable: true,
  })
  empowermentHistory?: EmpowermentHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => GroupListRelationFilter,
  })
  @ValidateNested()
  @Type(() => GroupListRelationFilter)
  @IsOptional()
  @Field(() => GroupListRelationFilter, {
    nullable: true,
  })
  group?: GroupListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => MahakramaHistoryListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MahakramaHistoryListRelationFilter)
  @IsOptional()
  @Field(() => MahakramaHistoryListRelationFilter, {
    nullable: true,
  })
  mahakramaHistory?: MahakramaHistoryListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => EventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventListRelationFilter)
  @IsOptional()
  @Field(() => EventListRelationFilter, {
    nullable: true,
  })
  signedUpEvents?: EventListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;
}
export { UserWhereInput };
