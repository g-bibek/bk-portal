/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserCreateNestedManyWithoutEmpowermentsInput } from "./UserCreateNestedManyWithoutEmpowermentsInput";
import {
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput } from "./EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput";
import { ResourceCreateNestedManyWithoutEmpowermentsInput } from "./ResourceCreateNestedManyWithoutEmpowermentsInput";
@InputType()
class EmpowermentCreateInput {
  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutEmpowermentsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutEmpowermentsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutEmpowermentsInput, {
    nullable: true,
  })
  authorizedTeachers?: UserCreateNestedManyWithoutEmpowermentsInput;

  @ApiProperty({
    required: false,
    type: () => EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput,
  })
  @ValidateNested()
  @Type(() => EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput)
  @IsOptional()
  @Field(() => EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput, {
    nullable: true,
  })
  empowermentHistories?: EmpowermentHistoryCreateNestedManyWithoutEmpowermentsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDeleted?: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => ResourceCreateNestedManyWithoutEmpowermentsInput,
  })
  @ValidateNested()
  @Type(() => ResourceCreateNestedManyWithoutEmpowermentsInput)
  @IsOptional()
  @Field(() => ResourceCreateNestedManyWithoutEmpowermentsInput, {
    nullable: true,
  })
  resource?: ResourceCreateNestedManyWithoutEmpowermentsInput;
}
export { EmpowermentCreateInput };
