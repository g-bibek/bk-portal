/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserUpdateManyWithoutEventsInput } from "./UserUpdateManyWithoutEventsInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  IsDate,
  IsEnum,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumEventEventType } from "./EnumEventEventType";
import { ResourceUpdateManyWithoutEventsInput } from "./ResourceUpdateManyWithoutEventsInput";
@InputType()
class EventUpdateInput {
  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  approvedUsers?: UserUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  disapprovedUsers?: UserUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumEventEventType,
  })
  @IsEnum(EnumEventEventType)
  @IsOptional()
  @Field(() => EnumEventEventType, {
    nullable: true,
  })
  eventType?: "Sangha" | "Public";

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isDeleted?: boolean;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isPublished?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => ResourceUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => ResourceUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => ResourceUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  resources?: ResourceUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
    type: () => UserUpdateManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => UserUpdateManyWithoutEventsInput)
  @IsOptional()
  @Field(() => UserUpdateManyWithoutEventsInput, {
    nullable: true,
  })
  signedUpUsers?: UserUpdateManyWithoutEventsInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;
}
export { EventUpdateInput };
