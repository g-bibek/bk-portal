/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { Empowerment } from "../../empowerment/base/Empowerment";
import { Event } from "../../event/base/Event";
import { Group } from "../../group/base/Group";
import { Mahakrama } from "../../mahakrama/base/Mahakrama";
import { EnumResourceResourceType } from "./EnumResourceResourceType";
@ObjectType()
class Resource {
  @ApiProperty({
    required: false,
    type: () => [Resource],
  })
  @ValidateNested()
  @Type(() => Resource)
  @IsOptional()
  childResources?: Array<Resource>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Empowerment],
  })
  @ValidateNested()
  @Type(() => Empowerment)
  @IsOptional()
  empowerments?: Array<Empowerment>;

  @ApiProperty({
    required: false,
    type: () => Event,
  })
  @ValidateNested()
  @Type(() => Event)
  @IsOptional()
  event?: Event | null;

  @ApiProperty({
    required: false,
    type: () => [Group],
  })
  @ValidateNested()
  @Type(() => Group)
  @IsOptional()
  groups?: Array<Group>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Mahakrama],
  })
  @ValidateNested()
  @Type(() => Mahakrama)
  @IsOptional()
  mahakramas?: Array<Mahakrama>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => Resource,
  })
  @ValidateNested()
  @Type(() => Resource)
  @IsOptional()
  parentResource?: Resource | null;

  @ApiProperty({
    required: false,
    enum: EnumResourceResourceType,
  })
  @IsEnum(EnumResourceResourceType)
  @IsOptional()
  @Field(() => EnumResourceResourceType, {
    nullable: true,
  })
  resourceType?: "Image" | "Youtube" | "Document" | "Link" | "Folder" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Resource };
