/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DiscussionThreadListRelationFilter } from "./DiscussionThreadListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DiscussionForumWhereUniqueInput } from "../../discussionForum/base/DiscussionForumWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { DiscussionThreadWhereUniqueInput } from "./DiscussionThreadWhereUniqueInput";
@InputType()
class DiscussionThreadWhereInput {
  @ApiProperty({
    required: false,
    type: () => DiscussionThreadListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DiscussionThreadListRelationFilter)
  @IsOptional()
  @Field(() => DiscussionThreadListRelationFilter, {
    nullable: true,
  })
  childDiscussionThreads?: DiscussionThreadListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  comment?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DiscussionForumWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscussionForumWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscussionForumWhereUniqueInput, {
    nullable: true,
  })
  discussionForum?: DiscussionForumWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => DiscussionThreadWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DiscussionThreadWhereUniqueInput)
  @IsOptional()
  @Field(() => DiscussionThreadWhereUniqueInput, {
    nullable: true,
  })
  parentThread?: DiscussionThreadWhereUniqueInput;
}
export { DiscussionThreadWhereInput };
