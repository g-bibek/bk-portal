/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AnnouncementWhereUniqueInput } from "../../announcement/base/AnnouncementWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { DiscussionForumListRelationFilter } from "../../discussionForum/base/DiscussionForumListRelationFilter";
import { EnumGroupGroupType } from "./EnumGroupGroupType";
import { StringFilter } from "../../util/StringFilter";
import { ResourceListRelationFilter } from "../../resource/base/ResourceListRelationFilter";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";
@InputType()
class GroupWhereInput {
  @ApiProperty({
    required: false,
    type: () => AnnouncementWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AnnouncementWhereUniqueInput)
  @IsOptional()
  @Field(() => AnnouncementWhereUniqueInput, {
    nullable: true,
  })
  announcement?: AnnouncementWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  details?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DiscussionForumListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DiscussionForumListRelationFilter)
  @IsOptional()
  @Field(() => DiscussionForumListRelationFilter, {
    nullable: true,
  })
  discussionForums?: DiscussionForumListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumGroupGroupType,
  })
  @IsEnum(EnumGroupGroupType)
  @IsOptional()
  @Field(() => EnumGroupGroupType, {
    nullable: true,
  })
  groupType?: "System" | "Default";

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => ResourceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ResourceListRelationFilter)
  @IsOptional()
  @Field(() => ResourceListRelationFilter, {
    nullable: true,
  })
  resources?: ResourceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  users?: UserListRelationFilter;
}
export { GroupWhereInput };
