/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Announcement } from "../../announcement/base/Announcement";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { DiscussionForum } from "../../discussionForum/base/DiscussionForum";
import { EnumGroupGroupType } from "./EnumGroupGroupType";
import { Resource } from "../../resource/base/Resource";
import { User } from "../../user/base/User";
@ObjectType()
class Group {
  @ApiProperty({
    required: false,
    type: () => Announcement,
  })
  @ValidateNested()
  @Type(() => Announcement)
  @IsOptional()
  announcement?: Announcement | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  details!: string | null;

  @ApiProperty({
    required: false,
    type: () => [DiscussionForum],
  })
  @ValidateNested()
  @Type(() => DiscussionForum)
  @IsOptional()
  discussionForums?: Array<DiscussionForum>;

  @ApiProperty({
    required: true,
    enum: EnumGroupGroupType,
  })
  @IsEnum(EnumGroupGroupType)
  @Field(() => EnumGroupGroupType, {
    nullable: true,
  })
  groupType?: "System" | "Default";

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => [Resource],
  })
  @ValidateNested()
  @Type(() => Resource)
  @IsOptional()
  resources?: Array<Resource>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [User],
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  users?: Array<User>;
}
export { Group };
